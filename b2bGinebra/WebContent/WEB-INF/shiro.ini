[main]
# set login url
user.loginUrl = /inicio.xhtml
authc.loginUrl = /inicio.xhtml
# redirect url called after successful login
authc.successUrl = /home.xhtml

myRealm = co.b2bginebra.seguridad.Login
securityManager.realm = $myRealm
 
# user and password parameter names at the website
authc.usernameParam = username
authc.passwordParam = password
 
# name of the component that triggers remember me functionality
#authc.rememberMeParam = rememberMe
 
# login error messages are returned to element with name shiroLoginFailure
authc.failureKeyAttribute = shiroLoginFailure
 
# Preconfigured password matcher that uses SHA-256 with 500000 hash iterations and a Salt
passwordMatcher = org.apache.shiro.authc.credential.PasswordMatcher
iniRealm.credentialsMatcher = $passwordMatcher


# anyofroles = co.b2bginebra.seguridad.AnyOfRolesAuthorizationFilter
roles.unauthorizedUrl = /home.xhtml

[users]
#password test123
admin = test123, root,
user = test123, Users


[urls]
# filter setup for secured pages
/javax.faces.resource/** = anon
/inicio.xhtml = authc
 
# when /shirotest/logout is invoked default redirect url / is used see LogoutFIlter.java
/logout = logout
 
#user filter is needed for remember-me to work
# to visit any page you must be known as a user (through remember me i.e.). If not you have to login
#/** = user
 
# make page only available for role
/alcaldiaEstadisticas.xhtml = authc, roles[root]
/alcaldiaParametros.xhtml = authc, roles[root]
/alcaldiaSolicitudes.xhtml = authc, roles[root]
/alcaldiaEstadoUsuarios.xhtml = authc, roles[root]
/infoPersonal.xhtml = authc, roles[Users]
/miNegocio.xhtml = authc, roles[Users]
/misNotificaciones.xhtml = authc, roles[Users]
/notificaciones.xhtml = authc, roles[Users]